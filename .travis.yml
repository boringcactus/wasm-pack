language: rust
sudo: false

INSTALL_NODE_VIA_NVM: &INSTALL_NODE_VIA_NVM
  |
    rustup target add wasm32-unknown-unknown
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
    source ~/.nvm/nvm.sh
    nvm install lts/carbon

# Cache `cargo install`ed tools, but don't cache the project's `target`
# directory (which ends up over-caching and filling all disk space!)
cache:
  directories:
    - /home/travis/.cargo

matrix:
  include:

  - name: Tests
    env: RUST_BACKTRACE=1
    rust: stable
    addons:
      firefox: latest
      chrome: stable
    install:
      - *INSTALL_NODE_VIA_NVM
    script:
    - cargo test --all --locked
    - rustup component add rustfmt-preview
    - cargo fmt --version
    - cargo fmt --all -- --check
    - rustup component add clippy-preview
    - cargo clippy --version
    - cargo clippy

  - name: Book
    rust: stable
    before_script:
    - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
    - (test -x $HOME/.cargo/bin/mdbook || cargo install --vers "^0.2" mdbook)
    - cargo install-update -a
    script:
    - mdbook --version
    - (cd docs && mv _theme theme && mdbook build)
    - rustc ./docs/_installer/build-installer.rs
    - ./build-installer

  - name: Linux Binary
    env: TARGET=x86_64-unknown-linux-musl
    rust: stable
    before_script: rustup target add $TARGET
    script: cargo build --release --target $TARGET --locked --features vendored-openssl
    addons:
      apt:
        packages:
          - musl-tools

  - name: macOS Binary
    env: MACOSX_DEPLOYMENT_TARGET=10.7 TARGET=x86_64-apple-darwin
    os: osx
    rust: stable
    script: cargo build --release --target $TARGET --locked
    install: true

notifications:
  email:
    on_success: never
